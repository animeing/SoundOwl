name: MariaDB Initial SQL Test

on:
  push:
  pull_request:

jobs:
  test-mariadb:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.5
        ports:
          - 3306:3306               # runner から 127.0.0.1:3306 で到達
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: test_db
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
    - uses: actions/checkout@v2

    # Ubuntu-latest には入っているが、将来の runner で削除されても壊れないよう保険
    - name: Install client
      run: sudo apt-get update -qq && sudo apt-get install -y mariadb-client

    # ─────────────────────────────────────────────
    # 以降はすべて $MYSQL コマンドで実行する
    # ─────────────────────────────────────────────
    - name: Define MYSQL helper
      run: echo "MYSQL='mysql -h 127.0.0.1 -P 3306 -uroot -proot_password'" >> "$GITHUB_ENV"

    - name: Wait for MariaDB
      run: |
        for i in {1..60}; do
          if mysqladmin ping -h 127.0.0.1 -P 3306 -uroot -proot_password --silent; then
            echo "MariaDB ready"; exit 0
          fi
          sleep 5
        done
        echo "MariaDB not ready" && exit 1

    - name: Apply initial SQL
      run: |
        $MYSQL test_db < parts/setup/db/soundowl_table_mysql.sql

    - name: Enable Event Scheduler & grant privilege
      run: |
        $MYSQL -e "SET GLOBAL event_scheduler = ON;"
        $MYSQL -e "GRANT EVENT ON *.* TO 'root'@'%'; FLUSH PRIVILEGES;"

    # ───────── 検証ブロック ─────────
    - name: Verify objects
      run: |
        # 期待リストを抽出
        tables=($(grep -oP '^CREATE TABLE `\K[^`]+(?=`)' parts/setup/db/soundowl_table_mysql.sql))
        procs=($(grep -oP '^CREATE PROCEDURE (?:`)?\K\w+'           parts/setup/db/soundowl_table_mysql.sql))
        events=($(grep -oP '^CREATE EVENT (?:IF NOT EXISTS )?(?:`)?\K\w+' parts/setup/db/soundowl_table_mysql.sql))
        triggers=($(grep -oP '^CREATE TRIGGER (?:`)?\K\w+'           parts/setup/db/soundowl_table_mysql.sql))
        views=($(grep -oP '^CREATE VIEW (?:`)?\K\w+'                 parts/setup/db/soundowl_table_mysql.sql))

        # テーブル
        actual=$($MYSQL -N -e "SHOW TABLES FROM test_db;")
        for t in "${tables[@]}"; do echo "$actual" | grep -qw "$t" || { echo "Missing table $t"; exit 1; }; done

        # プロシージャ
        actual=$($MYSQL -N -e "SHOW PROCEDURE STATUS WHERE Db='test_db';" | awk '{print $2}')
        for p in "${procs[@]}";   do echo "$actual" | grep -qw "$p" || { echo "Missing proc $p";   exit 1; }; done

        # イベント
        actual=$($MYSQL -N -e "SHOW EVENTS FROM test_db;" | awk '{print $2}')
        for e in "${events[@]}";  do echo "$actual" | grep -qw "$e" || { echo "Missing event $e";  exit 1; }; done

        # トリガ
        actual=$($MYSQL -N -e "SHOW TRIGGERS FROM test_db;" | awk '{print $1}')
        for g in "${triggers[@]}";do echo "$actual" | grep -qw "$g" || { echo "Missing trigger $g";exit 1; }; done

        # ビュー
        actual=$($MYSQL -N -e "SHOW FULL TABLES WHERE Table_type='VIEW';" | awk '{print $1}')
        for v in "${views[@]}";   do echo "$actual" | grep -qw "$v" || { echo "Missing view $v";   exit 1; }; done

    - name: Run manage_partitions_and_compact_ids & final checks
      run: |
        $MYSQL -D test_db -e "CALL manage_partitions_and_compact_ids();"
        $MYSQL -D test_db -e "SELECT PARTITION_NAME FROM INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_SCHEMA='test_db' AND TABLE_NAME='sound_play_history';"
        $MYSQL -D test_db -e "SELECT * FROM sound_play_history ORDER BY id;"
